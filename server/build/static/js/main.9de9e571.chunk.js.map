{"version":3,"sources":["hooks/useField.js","services/loginPost.js","components/Login.js","services/configGen.js","services/joinGroup.js","components/Groups.js","components/Chat.js","App.js","index.js"],"names":["useField","type","useState","value","setValue","onChange","event","preventDefault","target","onSubmit","loginPost","username","password","a","axios","post","res","Login","onLogin","userLogin","e","length","JSON","stringify","data","alert","configGen","user","parse","localStorage","getItem","headers","Authorization","token","joinGroup","group_name","passphrase","config","Groups","groupname","groupList","setGroupList","useEffect","then","groupEnter","includes","redirectRoom","room_name","window","location","href","map","group","onClick","autoFocus","chatStyle","Chat","socket","user_name","useParams","messages","setMessages","exp","setExp","expiry_date","emit","on","messageListener","newMessages","concat","scrollToBottom","off","sendMessage","message","document","getElementById","reset","messagesEndRef","useRef","current","scrollIntoView","behavior","style","ref","id","defaultValue","onKeyPress","key","io","require","App","setUser","userJSON","body","className","removeItem","path","to","setItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.9de9e571.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useField = (type) => {\n  const [value, setValue] = useState('');\n\n  const onChange = (event) => {\n    event.preventDefault();\n    setValue(event.target.value);\n  };\n\n  const onSubmit = () => {\n    setValue('');\n  };\n\n  return {\n    type,\n    value,\n    onChange,\n    onSubmit,\n  };\n};\n\nexport default useField;\n","import axios from 'axios'\r\n\r\nconst loginPost = async (username, password) => {\r\n    const res = await axios.post('http://localhost:3001/api/users/login', {\r\n        username: username,\r\n        password: password\r\n      })\r\n      \r\n    return res\r\n}\r\n\r\nexport default loginPost","import React from 'react'\r\nimport useField from '../hooks/useField'\r\nimport loginPost from '../services/loginPost'\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const username = useField('text')\r\n  const password = useField('password')\r\n  \r\n  const userLogin = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (username.value.length > 1 && password.value.length > 1) {\r\n        const res = await loginPost(username.value, password.value)\r\n        onLogin(JSON.stringify(res.data))\r\n      } else {\r\n        alert('input not allowed, username and password must both be at least of length 1')\r\n      }\r\n    } catch (err) {\r\n      alert('incorrect username or password')\r\n    }\r\n    username.onSubmit()\r\n    password.onSubmit()\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <h1>Enter</h1>\r\n    <p>If you have an existing account you will be logged in</p>\r\n    <p>If you don't have an existing account one will be created for you and you will be logged in automatically</p>\r\n    <p>Note: you cannot change your username or password once your account has been created</p>\r\n    <form onSubmit={userLogin}>\r\n      <label>Username: <input {...username} /></label><br />\r\n      <label>Password: <input {...password} /></label><br />\r\n      <button type=\"submit\">Enter</button>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login","const configGen = () => {\r\n  const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n  const token = `bearer ${user.token}`;\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  return config\r\n}\r\n\r\nexport default configGen","import axios from 'axios'\r\n\r\nconst joinGroup = async (group_name, passphrase, username, config) => {\r\n    await axios.post('http://localhost:3001/api/groups/join', {\r\n        group_name,\r\n        passphrase,\r\n        username\r\n    }, config)\r\n}\r\n\r\nexport default joinGroup","import React, { useState, useEffect } from 'react'\r\nimport useField from '../hooks/useField'\r\nimport configGen from '../services/configGen'\r\nimport joinGroup from '../services/joinGroup'\r\nimport axios from 'axios'\r\n\r\nconst Groups = ({ username }) => {\r\n    const groupname = useField('text')\r\n    const passphrase = useField('password')\r\n    const [ groupList, setGroupList ] = useState([])\r\n    const config = configGen()\r\n\r\n    useEffect(() => {\r\n      const config = configGen()\r\n      axios.post('http://localhost:3001/api/groups/list', {\r\n        username: username\r\n        }, config).then(res => setGroupList(res.data))     \r\n    }, [username])\r\n  \r\n    const groupEnter = async (e) => {\r\n      e.preventDefault()\r\n      try {\r\n        if (groupname.value.length > 1 || passphrase.value.length > 1) {\r\n          if (!groupList.includes(groupname.value)) {\r\n            await joinGroup(groupname.value, passphrase.value,  username, config)\r\n          }\r\n          redirectRoom(groupname.value)\r\n        } else {\r\n          alert('input not allowed, groupname and passphrase must both be at least of length 1')\r\n        }\r\n      } catch (err) {\r\n        alert(err)\r\n      }\r\n      groupname.onSubmit()\r\n      passphrase.onSubmit()\r\n    }\r\n    \r\n    const redirectRoom = (room_name) => {\r\n      window.location.href = `http://localhost:3000/chat/${room_name}`\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <h1>Join Group</h1>\r\n      <h2>List of groups for {username}</h2>\r\n      {groupList.length > 0 ?\r\n      groupList\r\n        .map(group => (\r\n          <div>\r\n            <button onClick={e => {\r\n              e.preventDefault()\r\n              redirectRoom(group)\r\n              }}>\r\n              Enter chat room for \"{group}\"\r\n            </button>\r\n          </div>\r\n        )):\r\n        <p>You aren't in any groups...YET :)</p>}\r\n      <p>If the group exists you will be allowed in</p>\r\n      <p>If the group does not exist, one will be created and you will be allowed in</p>\r\n      <form onSubmit={groupEnter}>\r\n        <label>Group name: <input {...groupname} autoFocus/></label><br />\r\n        <label>Passphrase: <input {...passphrase} /></label><br />\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Groups\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport configGen from '../services/configGen'\r\nimport axios from 'axios'\r\n\r\nconst chatStyle = {\r\n    'overflowY': 'scroll',\r\n    'border':'1px solid black',\r\n    'width':'300px',\r\n    'height':'300px',\r\n    'position':'relative'\r\n}\r\n\r\nconst Chat = ({ socket, user_name }) => {\r\n    const { room_name } = useParams()\r\n    const [ messages, setMessages ] = useState([])\r\n    const config = configGen()\r\n    const [ exp, setExp ] = useState('')\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post('http://localhost:3001/api/groups/exp', {\r\n            group_name: room_name\r\n      }, config)\r\n            .then((res) => {\r\n        setExp(res.data[0].expiry_date)\r\n      })\r\n            .then(\r\n                socket.emit('joinRoom', { user_name, room_name })\r\n            )\r\n    }, [])\r\n\r\n    const messageListener = (...args) => {\r\n        const newMessages = messages.concat(args[0])\r\n        scrollToBottom()\r\n        setMessages(newMessages)\r\n        socket.off('message', messageListener)\r\n    }\r\n\r\n    socket.on('message', messageListener)\r\n \r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        socket.emit('chat', {\r\n            message: e.target.value,\r\n            user_name,\r\n            room_name\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n    }\r\n\r\n    const backToGroups = (e) => {\r\n        e.preventDefault()\r\n        socket.emit('disconnect_room', {\r\n            user_name,\r\n            room_name\r\n        })\r\n        window.location.href = `http://localhost:3000/groups`\r\n    }\r\n\r\n    const messagesEndRef = useRef(null)\r\n\r\n    const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"auto\" })\r\n  }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Chat room for {room_name}</h3>\r\n            <p>This room will expire at {exp}</p>\r\n            <button onClick={backToGroups}>Click to go back to groups</button> \r\n            <div style={chatStyle}>\r\n            {messages\r\n                .map(message => (\r\n                    <p>\r\n                        {message.username}: {message.message}\r\n                    </p>\r\n                ))}\r\n            <div ref={messagesEndRef} />\r\n            </div>\r\n            <form onSubmit={sendMessage} id='form'>\r\n            <label>\r\n                <input \r\n                    autoFocus\r\n                    defaultValue=''\r\n                    type='text' \r\n                    onKeyPress={e => {\r\n                        if (e.key === 'Enter') {\r\n                            sendMessage(e)\r\n                        }\r\n                    \r\n            }}/></label><button type=\"submit\">Send</button><br />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\nimport Login from './components/Login'\nimport Groups from './components/Groups'\nimport Chat from './components/Chat'\nimport axios from 'axios'\nconst io = require(\"socket.io-client\")\n\nconst App = () => {\n  const [ user, setUser ] = useState(null)\n\n  useEffect(() => {\n    try {\n      const userJSON = JSON.parse(localStorage.getItem('loggedInUser'))\n      const body = { token: userJSON.token }\n      axios\n        .post('http://localhost:3001/api/users/auth', body)\n        .then((res) => {\n          if (res.data === 'valid') {\n            setUser(userJSON)\n          } else {\n            setUser(null)\n          }\n        })\n    } catch {\n      setUser(null)\n    }\n  }, [])\n  \n  const onLogin = (data) => {\n    window.localStorage.setItem(\n      'loggedInUser', data\n    )\n    setUser(JSON.parse(localStorage.getItem('loggedInUser')))\n  }\n\n  const Logout = () => {\n    window.localStorage.removeItem('loggedInUser')\n    setUser(null)\n    window.location.href = `http://localhost:3000/`\n  }\n\n  const socket = io('localhost:3001')\n\n  // socket.once('connect', () => {\n  //   console.log('connected')\n  // })\n\n  return (\n    <Router>\n      <div className='container'>\n        <h1>30 Chat</h1>\n         {user ? <p>Currently logged in as {user.username}<button onClick={Logout}>Logout</button></p> : null}\n        <Switch>\n          <Route path=\"/chat/:room_name\">\n            {user ? <Chat socket={socket} user_name={user.username} /> : <p>'loading'</p>}\n          </Route>\n          <Route path=\"/groups\">\n          {user === null ? <Redirect to=\"/login\" /> : <Groups username={user.username} socket={socket}/>}\n          </Route>\n          <Route path=\"/login\">\n            {user === null ? <Login onLogin={onLogin} /> : <Redirect to=\"/groups\" />}\n          </Route>\n          <Route path=\"/\">\n            {user === null ? <Redirect to=\"/login\" /> : <Redirect to=\"/groups\" />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}